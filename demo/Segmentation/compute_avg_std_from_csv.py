import csv
import numpy as np
import os
import pdb
import sys



def raise_error(msg, function):
    sys.exit("\n***************\n* Error in function \"%s\"\n* %s\n***************" % (function, msg))


def get_scores(csv_file, sep=','):
    scores = []

    with open(csv_file, 'r') as f:
        reader = csv.reader(f, delimiter=sep)
        for row in reader:
            scores.append(float(row[1]))

    return np.array(scores)



def main():
    """
    Computes the Average and Standard deviation from a Score File.
    Such file must have generated by the C program: demo/Segmentation/iftMeasureSimilarity.c, or
    simply have the following format: image_filename,score (where is the the separator passed)

    0001.pgm,95.50
    0002.pgm,97.90
    """
    if len(sys.argv) != 3:
        sys.exit("Usage: compute_avg_std_from_csv.py <scores.csv> <csv_separator: , or ; or | >\n\n" +
                 "Score file must have the format image,score (where , is the separator passed)\n"+
                 "0001.pgm,95.50\n" +
                 "0002.pgm,97.90\n")

    score_file = os.path.expanduser(sys.argv[1])
    sep = sys.argv[2]

    scores = get_scores(score_file, sep)
    print("Scores")
    print(scores)
    print("\nMean +- std")
    print("{0:.2f} +- {1:.2f}".format(np.mean(scores), np.std(scores)))
    print("${0:.2f} \pm {1:.2f}$".format(np.mean(scores), np.std(scores)))


if __name__ == "__main__":
    sys.exit(main())



